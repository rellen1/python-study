##피보나치 수 구할때는 트리구조로 구해야된다는데.. 나는 뭐지...


i, j = 0, 1 #피보나치 리스트의 더하기를 진행할 매개변수..
nn = [0,1] # 피보나치의 기본 0,1이 들어간 리스트 셋

def fib(n):
    
    global i, j
    global nn

    if n == 1:
        return nn[-1] # 리스트 중 가장 마지막 수 반환
    
    nn.append(nn[i] + nn[j]) # 리스트에 넣고 앞에 두 수를 더한걸 리스트 뒤에 추가
    i += 1 #리스트에 더할 첫번째 인자값 
    j += 1 # 리스트에 더할 두번째 인자값
    n -= 1 # if문 탈출을 위한 n 차감
    return fib(n)

n = int(input())
print(fib(n))


# 일단 풀었는데 해설은.. 다음과 같다..
# 피보나치 수를 재귀호출로 구하려면 트리 구조로 구해야 합니다. 현재 n에서 바로 앞의 수(-1)과 그 앞의 수(-2)를 구해서 fib 함수에 넣는 식으로 수를 쪼개 나갑니다. n이 피보나치 수의 시작인 1이나 0이 되었을 때 재귀호출을 끝내고 n을 반환합니다. 만약 fib(5)라면 다음과 같은 모양이 됩니다. 5에서 4와 3을 쪼개고, 4에서 3과 2를 쪼갭니다. 그리고 3에서 2와 1을 쪼개는 식으로 1과 0이 될 때까지 반복합니다. 1 또는 0이 되었을 때는 반환하면서 쪼개진 두 값을 더하면 됩니다. 괄호 안의 값은 맨 아래 단계에서 쪼개진 값을 더해서 올라온 값입니다.