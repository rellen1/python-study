a = input().split()
b = input().split()
b = list(map(float,b))
print(dict(zip(a,b)))


# 리스트 = [값, 값, 값]         # 리스트 만들기
# 리스트 = []                   # 빈 리스트 만들기
# 리스트 = list()               # 빈 리스트 만들기
# 리스트 = list(range(횟수))    # range로 리스트 만들기
 
# 리스트[인덱스]                # 리스트의 요소에 접근
# 리스트[0]                     # 리스트의 인덱스는 0부터 시작하므로 첫 번째 요소
# 리스트[인덱스] = 값           # 리스트의 요소에 값 저장

# range(횟수)
# range(시작, 끝)
# range(시작, 끝, 증가폭)

# 튜플 = (값, 값, 값)          # 튜플 만들기
# 튜플 = 값, 값, 값            # 괄호 없이 튜플 만들기
# 튜플 = ()                    # 빈 튜플 만들기
# 튜플 = tuple()               # 빈 튜플 만들기
# 튜플 = tuple(list())         # tuple에 list()를 넣어서 빈 튜플 만들기
# 튜플 = tuple(리스트)         # tuple에 리스트를 넣어서 튜플 만들기
# 튜플 = tuple(range(횟수))    # range로 튜플 만들기
 
# 튜플[인덱스]                 # 튜플의 요소에 접근
# 튜플[0]                      # 튜플의 인덱스는 0부터 시작하므로 첫 번째 요소
 
# 튜플 = (값, )                # 요소가 한 개인 튜플 만들기
# 튜플 = 값,                   # 요소가 한 개인 튜플 만들기

# 값 in 시퀀스객체             # 시퀀스 객체에 특정 값이 있는지 확인
# 값 not in 시퀀스객체         # 시퀀스 객체에 특정 값이 없는지 확인
 
# 시퀀스객체1 + 시퀀스객체2    # 시퀀스 객체를 서로 연결하여 새 시퀀스 객체를 만듦
# 시퀀스객체 * 정수            # 시퀀스 객체를 특정 횟수만큼 반복하여 새 시퀀스 객체를 만듦
# 정수 * 시퀀스객체            # 시퀀스 객체를 특정 횟수만큼 반복하여 새 시퀀스 객체를 만듦
 
# len(시퀀스객체)              # 시퀀스 객체의 요소 개수(길이) 구하기
 
# 시퀀스객체[인덱스]           # 시퀀스 객체의 요소에 접근
# 시퀀스객체[0]                # 시퀀스 객체의 인덱스는 0부터 시작하므로 첫 번째 요소
# 시퀀스객체[-음수]            # 인덱스를 음수로 지정하면 뒤에서부터 요소에 접근, -1은 뒤에서 첫 번째
# 시퀀스객체[인덱스] = 값      # 시퀀스 객체의 요소에 값 저장
 
# del 시퀀스객체[인덱스]       # 시퀀스 객체의 요소를 삭제

# 시퀀스객체[시작인덱스:끝인덱스]                 # 지정된 범위의 요소를 잘라서 새 시퀀스 객체를 만듦
# 시퀀스객체[시작인덱스:끝인덱스:인덱스증가폭]    # 인덱스 증가폭을 지정하면 해당 값만큼 
#                                                 # 인덱스를 증가시키면서 요소를 가져옴
 
# 시퀀스객체[:끝인덱스]      # 시작 인덱스를 생략하여 객체의 처음부터 끝 인덱스 - 1까지 가져옴
# 시퀀스객체[시작인덱스:]    # 끝 인덱스를 생략하여 시작 인덱스부터 마지막 요소까지 가져옴
# 시퀀스객체[:]              # 시작 인덱스와 끝 인덱스를 생략하여 객체 전체를 가져옴
 
# 시퀀스객체[0:len(시퀀스객체)]     # len을 응용하여 객체 전체를 가져옴
# 시퀀스객체[:len(시퀀스객체)]      # 시작 인덱스 생략, len을 응용하여 객체 전체를 가져옴
 
# 시퀀스객체[:끝인덱스:증가폭]      # 객체의 처음부터 증가폭만큼 인덱스를 증가시키면서 
#                                   # 끝 인덱스 - 1까지 요소를 가져옴
# 시퀀스객체[시작인덱스::증가폭]    # 시작 인덱스부터 증가폭만큼 인덱스를 증가시키면서 
#                                   # 마지막 요소까지 가져옴
# 시퀀스객체[::증가폭]              # 객체 전체에서 증가폭만큼 인덱스를 증가시키면서 요소를 가져옴
 
# 시퀀스객체[::]                    # 객체 전체를 가져옴, 시퀀스객체[:]와 같음
 
# 시퀀스객체[시작인덱스:끝인덱스] = 시퀀스객체                 # 범위를 지정하여 여러 요소에 값 할당
# 시퀀스객체[시작인덱스:끝인덱스:인덱스증가폭] = 시퀀스객체    # 증가폭만큼 인덱스를 건너뛰면서 할당
 
# del 시퀀스객체[시작인덱스:끝인덱스]    # 특정 범위의 요소를 삭제(원본 객체가 변경됨)

# 딕셔너리 = {키1: 값1, 키2: 값2}    # 딕셔너리 만들기
# 딕셔너리 = {}                      # 빈 딕셔너리 만들기
# 딕셔너리 = dict()                  # 빈 딕셔너리 만들기
 
# 딕셔너리[키]                       # 딕셔너리에서 키로 값에 접근
# 딕셔너리[키] = 값                  # 딕셔너리에서 키에 값 할당
 
# 키 in 딕셔너리                     # 딕셔너리에 특정 키가 있는지 확인
# 키 not in 딕셔너리                 # 딕셔너리에 특정 키가 없는지 확인
 
# len(딕셔너리)                      # 딕셔너리의 키 개수(길이) 구하기